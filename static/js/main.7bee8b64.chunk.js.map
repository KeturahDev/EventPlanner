{"version":3,"sources":["Components/Event.js","Components/EventList.js","Components/MainPage.js","Components/Header.js","Components/Footer.js","Components/RSVPForm.js","Components/Results.js","Components/EventDetails.js","Components/NewEventForm.js","Components/Signin.js","App.js","serviceWorker.js","reducers/index.js","reducers/current-page-reducer.js","reducers/selected-event-reducer.js","firebase.js","index.js"],"names":["Event","props","Fragment","onClick","handleChangeViewClick","handleSelectEvent","title","host","date","yes","maybe","no","id","EventStyles","style","div","EventList","useFirestoreConnect","collection","events","useSelector","state","firestore","ordered","isLoaded","map","event","index","key","MainPage","className","EventPlannerHeader","styled","h1","notALink","textDecoration","color","fontSize","backgroundColor","borderRadius","padding","Header","handleClickLink","to","FootStyle","Footer","ButtonBox","RsvpForm","useFirestore","handleVoteClick","col","console","log","selectedEvent","update","doc","DataBox","Graph","Answers","Results","dataArr","status","votes","yescount","maybecount","nocount","theme","VictoryTheme","material","domainPadding","data","fill","x","y","DetailBox","CenterContent","EventDetails","dbSelectedEvent","RSVPForm","handleBackToMainPage","FormBubble","NewEventForm","onSubmit","defaultEvent","preventDefault","add","target","value","type","name","placeholder","SignInBubble","Signin","email","password","firebase","auth","createUserWithEmailAndPassword","then","catch","error","message","signinEmail","signinPassword","signInWithEmailAndPassword","signOut","AppBody","App","reRender","setState","stateToUpdate","handleChangingView","page","dispatch","action","handleChangeSelectedEvent","this","currentPage","authComponent","currentUser","setVisibility","path","React","Component","mapStateToProps","presetEvents","connect","withFirestore","Boolean","window","location","hostname","match","rootReducer","combineReducers","eventsReducer","firestoreReducer","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","REACT_APP_FIREBASE_SENDER_ID","appId","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","subscribe","getState","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7bee8b64.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Event(props) { //button id = prop?\n\n  return (\n    <React.Fragment>\n      <div onClick={() => {\n          props.handleChangeViewClick(\"EventDetails\");\n          props.handleSelectEvent({\n            title: props.title, \n            host: props.host, \n            date: props.date,\n            yes: props.yes,\n            maybe: props.maybe,\n            no: props.no,\n            id: props.id\n          });\n        }} >\n        <h3>{props.title}</h3> \n      </div>\n    </React.Fragment>\n  );\n}\n\nEvent.propTypes = {\n  handleChangeViewClick: PropTypes.func,\n  handleSelectEvent: PropTypes.func\n}\n\nexport default Event;","import React from 'react';\nimport Event from './Event';\nimport { useSelector } from 'react-redux'\nimport { useFirestoreConnect, isLoaded } from 'react-redux-firebase'\nimport style from \"styled-components\";\n\n\nconst EventStyles = style.div `\n  border: 2px solid grey;\n  border-radius: 9px;\n  background-color: #909f86a7;\n  padding-left: 6px;\n  margin-top: 6px;\n`;\n\nfunction EventList(props) {\n\n  useFirestoreConnect([{ collection: 'events' }]);\n\n  const events = useSelector(state => state.firestore.ordered.events);\n\n  if (isLoaded(events)) {\n    return (\n      <React.Fragment>\n        <div>\n          {events.map((event, index) =>\n            <EventStyles\n              key={event.id}\n            >\n              <Event\n                title={event.title}\n                host={event.host}\n                date={event.date}\n                yes={event.yes}\n                maybe={event.maybe}\n                no={event.no}\n                id={event.id}\n                handleChangeViewClick={props.handleChangeViewClick}\n                handleSelectEvent={props.handleSelectEvent}\n              />\n            </EventStyles>\n          )}\n        </div>\n      </React.Fragment>\n    );\n  } else {\n    return (<h3>Loading...</h3>);\n  }\n}\n\nexport default EventList;","import React from 'react';\nimport EventList from './EventList';\nimport PropTypes from 'prop-types'\n\n\nconst MainPage = props => {\n  return (\n    <React.Fragment>\n      <button className=\"button\" onClick={() => props.handleChangeViewClick('NewEventForm')}>Add New Event</button>\n      <EventList handleChangeViewClick={props.handleChangeViewClick} handleSelectEvent={props.handleSelectEvent} />\n    </React.Fragment>\n  )\n}\nMainPage.propTypes = {\n  handleChangeViewClick: PropTypes.func\n}\nexport default MainPage;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from 'styled-components';\n\nconst EventPlannerHeader = styled.h1`\n  font-size: 50px;\n  ${'' /* text-align: center; */}\n  color: #b5f587;\n  ${'' /* background-image: linear-gradient(to bottom, #b3f484, #83b462, #567842, #2e4124, #060f00); */}\n  font-family: \"Trebuchet MS\", Helvetica, sans-serif;\n  margin:0%\n`;\n\nconst notALink = {\n  textDecoration: \"none\",\n  color: \"#b5f587\",\n  fontSize: \"25px\",\n  backgroundColor: \"#030c0185\",\n  borderRadius: \"9px\",\n  padding: \"5px\"\n}\n\nfunction Header(props){\n  return (\n    <React.Fragment>\n      <ul className=\"centerBox\" >\n      <EventPlannerHeader className=\"blocks\" >\n          Event Planner\n      </EventPlannerHeader>\n      <div className=\"linkBox\">\n        <li className=\"blocks\" onClick={props.handleClickLink}>\n          <Link style={notALink} to=\"/\">Home</Link>\n        </li>\n        <li className=\"blocks\" onClick={props.handleClickLink}>\n          <Link style={notALink} to=\"/signin\">Sign In</Link>\n        </li>\n      </div>\n      </ul>\n    </React.Fragment>\n  );\n}\n\nexport default Header;","import React from 'react';\nimport style from \"styled-components\";\n\nconst FootStyle = style.div `\nposition: fixed;\n  left: 0;\n  bottom: 0;\n  width: 100%;\n  background-color: #909f86a7;\n  border: 2px solid grey;\n  font-size: 11px;\n  padding-left: 7%\n`;\n\nconst Footer = () => {\n  return(\n    <FootStyle>\n      <p>&copy; 2020 - Keturah Howard, Jamison Cozart, Zakkrey Short, Stephanie Podolak</p>\n    </FootStyle>\n  )\n}\n\nexport default Footer;","import React from \"react\";\nimport { useFirestore } from 'react-redux-firebase';\nimport style from 'styled-components'\n\nconst ButtonBox = style.div `\n  padding: 5px;\n  \n`;\n\nfunction RsvpForm(props) {\n  const firestore = useFirestore();\n   console.log(\"IN DETAILS\",props.selectedEvent);\n   function handleVoteClick(col) {\n     if(col === \"yes\") {\n       console.log(\"IN FUNCTION\",props.selectedEvent.id);\n       return firestore.update({collection: 'events', doc: props.id }, {yes: props.selectedEvent.yes+1})\n    } else if (col === \"maybe\") {\n      return firestore.update({collection: 'events', doc: props.id }, {maybe: props.selectedEvent.maybe+1})\n    } else if (col === \"no\") {\n      return firestore.update({collection: 'events', doc: props.id }, {no: props.selectedEvent.no+1})\n    }\n  }\n\n  return (\n    <ButtonBox>\n      <button className=\"buttonVote\" onClick={() => handleVoteClick(\"yes\")}>Yes</button>\n      <button className=\"buttonVote\" onClick={() => handleVoteClick(\"maybe\")}>Maybe</button>\n      <button className=\"buttonVote\" onClick={() => handleVoteClick(\"no\")}>No</button>\n    </ButtonBox>\n  );\n}\n\nexport default RsvpForm;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { VictoryBar, VictoryChart, VictoryTheme} from 'victory';\nimport style from 'styled-components'\n\nconst DataBox = style.div `\n  padding: 6px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Graph = style.div `\n  border-radius: 9px;\n  border: 2px solid grey;\n  margin: 10px;\n  background-color: rgba(253, 255, 253, 0.886);\n`;\n  \nconst Answers = style.div `\n\n  margin: 10px;\n\n`;\n\nfunction Results(props){\n\n  const dataArr = [ \n    {status: \"yes\", votes: props.yescount},\n    {status: \"maybe\", votes: props.maybecount},\n    {status: \"no\", votes: props.nocount} \n  ]\n\n  return(\n    <React.Fragment>\n      <DataBox>\n        <Graph>\n          <div className={\"data\"}>\n            <VictoryChart \n            theme={VictoryTheme.material}\n            domainPadding={20}>\n              <VictoryBar \n                data={dataArr}\n                style={{data: {fill: \"pink\"}}}\n                x=\"status\"\n                y=\"votes\"\n                />\n            </VictoryChart>\n          </div>\n        </Graph>\n        <Answers>\n          <p>Going: {props.yescount}</p>\n          <p>Might be going: {props.maybecount}</p>\n          <p>Not going: {props.nocount}</p>\n        </Answers>\n      </DataBox>\n      \n    </React.Fragment>\n  );\n}\n\nResults.propTypes = {\n  yescount: PropTypes.number,\n  maybecount: PropTypes.number,\n  nocount: PropTypes.number\n}\n\nexport default Results;","import React from \"react\";\nimport RSVPForm from \"./RSVPForm\";\nimport Results from \"./Results\";\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux'\nimport { useFirestoreConnect, isLoaded } from 'react-redux-firebase'\nimport style from 'styled-components'\n\nconst DetailBox = style.div `\n  border: 2px solid grey;\n  border-radius: 9px;\n  background-color: #909f86a7;\n  padding-left: 6px;\n  margin-top: 6px;\n`;\n\nconst CenterContent = style.div `\n  padding: 6px;\n  display: flex;\n  justify-content: center;\n`;\nfunction EventDetails(props) { \n  const {selectedEvent} = props;\n\n  useFirestoreConnect([{ collection: 'events', doc: selectedEvent.id }]);\n\n  const dbSelectedEvent = useSelector(({ firestore: { data } }) => data.events && data.events[selectedEvent.id]);\n\n  if(isLoaded(dbSelectedEvent)) {\n    console.log(\"DB SELECTED:\",dbSelectedEvent);\n    return (\n      <React.Fragment>\n        <DetailBox>\n          <h3>{selectedEvent.title}</h3>\n          <h4>On {dbSelectedEvent.date} by: {selectedEvent.host}</h4>\n          <CenterContent>\n            <RSVPForm selectedEvent={dbSelectedEvent} id={selectedEvent.id}/>\n          </CenterContent>\n          \n          <hr/>\n          <Results yescount={dbSelectedEvent.yes} maybecount={dbSelectedEvent.maybe} nocount={dbSelectedEvent.no}/>\n          <hr/>\n          <CenterContent>\n            <button className=\"button\" onClick={() => props.handleBackToMainPage('MainPage')}>MainPage</button>\n          </CenterContent>\n        </DetailBox>\n      </React.Fragment>\n    );\n  }\n}\n\nEventDetails.propTypes = {\n  handleBackToMainPage: PropTypes.func,\n  selectedEvent: PropTypes.object\n}\n\n\nexport default EventDetails;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useFirestore } from 'react-redux-firebase';\nimport styled from 'styled-components';\n\nconst FormBubble = styled.div `\n  border: 2px solid grey;\n  border-radius: 9px;\n  padding: 3px;\n  ${'' /* padding-left: 7%; */}\n  padding-bottom: 3%;\n  background-color: #909f86a7;\n  text-align: center;\n`;\n\nfunction NewEventForm(props) {\n  const firestore = useFirestore();\n\n  function addEventToFirestore(defaultEvent) {\n    defaultEvent.preventDefault();\n    props.handleBackToMainPage('MainPage');\n    return firestore.collection('events').add({\n      title: defaultEvent.target.title.value,\n      host: defaultEvent.target.host.value,\n      date: defaultEvent.target.date.value,\n      yes: 0,\n      maybe: 0,\n      no:0\n    });\n  }\n\n  return(\n    <React.Fragment>\n    <FormBubble>\n      <h2>New Event Form</h2>\n      <form className=\"centerBox\" onSubmit={addEventToFirestore}>\n        <input \n          type='text'\n          name='title'\n          placeholder='Event Title' />\n        <input \n          type='text'\n          name='host'\n          placeholder='Event Host' />\n        <input \n          type='text'\n          name='date'\n          placeholder='Event Date' />\n        <button className=\"button\" type=\"submit\">Submit</button>\n      </form>\n      <div className=\"centerBox\" >\n        <button className=\"button\" onClick={() => props.handleBackToMainPage('MainPage')}>Back to Events</button>\n      </div>\n      </FormBubble>\n    </React.Fragment>\n  )\n}\n\nNewEventForm.propTypes = {\n  handleBackToMainPage: PropTypes.func\n}\nexport default NewEventForm;","import React from \"react\";\nimport firebase from \"firebase/app\";\nimport style from 'styled-components';\n\nconst SignInBubble = style.div `\n  border: 2px solid grey;\n  border-radius: 9px;\n  padding: 3px;\n  padding-left: 7%;\n  padding-bottom: 3%;\n  background-color: #909f86a7;\n`;\n\nfunction Signin(){  \n\n  function doSignUp(event){\n    event.preventDefault();\n    const email = event.target.email.value;\n    const password = event.target.password.value;\n    firebase.auth().createUserWithEmailAndPassword(email, password).then(function(){\n      console.log(\"successfully signed up!\");\n    }).catch(function(error) {\n      console.log(error.message);\n    });\n  }\n\n  function doSignIn(event){\n    event.preventDefault()\n    const email = event.target.signinEmail.value;\n    const password = event.target.signinPassword.value;\n    firebase.auth().signInWithEmailAndPassword(email, password).then(function(){\n      console.log(\"WHOOOA WE KNOW YOU\")\n    }).catch(function(error){\n      console.log(error.message);\n    })\n  }\n\n  function doSignOut() {\n    firebase.auth().signOut().then(function() {\n      console.log(\"Bish bye!\");\n    }).catch(function(error) {\n      console.log(error.message);\n    });\n  }\n\n  return (\n    <React.Fragment>\n    <SignInBubble>\n      <h1>Sign up</h1>\n      <form onSubmit={doSignUp}>\n        <input\n          type='text'\n          name='email'\n          placeholder='email' />\n        <input\n          type='password'\n          name='password'\n          placeholder='Password' />\n        <button className=\"button\" type='submit'>Sign up</button>\n      </form>\n\n      <h1>Sign In</h1>\n      <form onSubmit={doSignIn}>\n        <input\n          type='text'\n          name='signinEmail'\n          placeholder='email' />\n        <input\n          type='password'\n          name='signinPassword'\n          placeholder='Password' />\n        <button className=\"button\" type='submit'>Sign in</button>\n      </form>\n      <h1>Sign Out</h1>\n  <button className=\"button\" onClick={doSignOut}>Sign out</button>\n    </SignInBubble>\n    </React.Fragment>\n  );\n}\n\nexport default Signin","import React from 'react';\nimport MainPage from './Components/MainPage';\nimport Header from './Components/Header';\nimport Footer from './Components/Footer';\nimport EventDetails from './Components/EventDetails';\nimport NewEventForm from './Components/NewEventForm';\nimport {connect} from 'react-redux';\nimport Signin from \"./Components/Signin\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { withFirestore, isLoaded } from 'react-redux-firebase';\nimport './App.css';\nimport styled from 'styled-components';\n\nconst AppBody = styled.div `\n  margin: 7%;\n`;\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stateToUpdate: false\n    }\n  }\n\n  reRender = () => {\n    this.setState({\n      stateToUpdate: !this.state.stateToUpdate\n    });\n  }\n    \n  handleChangingView = (page) => {\n    const { dispatch } = this.props;\n    const action = {}; //\n    if(page === 'MainPage') {\n      action.type = 'SHOW_MAINPAGE';\n    } else if(page === 'NewEventForm') {\n      action.type = 'SHOW_NEWEVENTFORM';\n    } else if(page === 'EventDetails') {\n      action.type = 'SHOW_EVENTDETAILS';\n    }\n    dispatch(action);\n  }\n  \n  handleChangeSelectedEvent = (event) => {\n    const { dispatch } = this.props;\n    console.log(\"event id: \",event.id)\n    const action = { \n      type: 'SELECT_EVENT', \n      title: event.title, \n      host: event.host, \n      date: event.date, \n      id: event.id,\n      yes: event.yes,\n      maybe: event.maybe,\n      no: event.no,\n    };\n    dispatch(action);\n  }\n  \n  setVisibility() {\n    if(this.props.currentPage === 'MainPage') {\n      return <MainPage \n        handleChangeViewClick={this.handleChangingView}\n        handleSelectEvent={this.handleChangeSelectedEvent} />\n      } else if (this.props.currentPage === 'NewEventForm'){\n        return <NewEventForm handleBackToMainPage={this.handleChangingView} />\n      } else if (this.props.currentPage === \"EventDetails\") {\n        return <EventDetails handleBackToMainPage={this.handleChangingView} selectedEvent={this.props.selectedEvent}/>\n      }\n    }\n  \n  \n    render() {\n      console.log(\"PROPS\", this.props)\n    const auth = this.props.firebase.auth();\n    let authComponent = null;\n    if(!isLoaded(auth)) {\n      authComponent = <h1>Loading...</h1>;\n    }\n    if ((isLoaded(auth)) && (auth.currentUser == null)) {\n      authComponent = <h1>You need to be signed in to view this page!</h1>\n    } \n    if((isLoaded(auth)) && (auth.currentUser != null)) {\n      authComponent = this.setVisibility();\n    }\n    console.log(\"yoooo\", auth);\n    return (\n      <Router >\n        <Header handleClickLink={this.reRender}/>\n          <AppBody>\n        <Switch>\n          <Route path=\"/signin\">\n            <Signin />\n          </Route>\n          <Route path=\"/\">\n            {authComponent}\n          </Route>\n        </Switch>\n          </AppBody>\n        <Footer />\n      </Router>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  events: state.events,\n  presetEvents: state.presetEvents,\n  currentPage: state.currentPage,\n  selectedEvent: state.selectedEvent\n});\n\nApp = connect(mapStateToProps)(App);\nconsole.log(\"MAP\", mapStateToProps)\n\nexport default withFirestore(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import eventsReducer from \"./events-reducer\";\nimport selectedEventReducer from \"./selected-event-reducer\";\nimport currentPageReducer from \"./current-page-reducer\";\nimport {combineReducers} from \"redux\";\nimport { firestoreReducer } from 'redux-firestore';\n\nconst rootReducer = combineReducers({\n  events: eventsReducer,\n  currentPage: currentPageReducer,\n  selectedEvent: selectedEventReducer,\n  firestore: firestoreReducer\n});\n\nexport default rootReducer;","export default(state ='MainPage', action) => {\n  switch(action.type){\n    case \"SHOW_MAINPAGE\":    \n      return \"MainPage\"\n    case \"SHOW_EVENTDETAILS\":\n      return \"EventDetails\"\n    case \"SHOW_NEWEVENTFORM\":\n      return \"NewEventForm\"\n    default:\n      return state;\n  }     \n}\n\n// MainPage EventDetails NewEventForm","export default (state = {}, action) => {\n  switch(action.type) {\n    case \"SELECT_EVENT\":\n      const {title, host, date, id, yes, maybe, no} = action;\n      return {title, host, date, id, yes, maybe, no};\n    default:\n      return state;\n  }\n}","import * as firebase from 'firebase';\nimport 'firebase/firestore';\n\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID \n}\n\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore();\n\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport rootReducer from './reducers'\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase';\nimport { createFirestoreInstance } from 'redux-firestore';\nimport firebase from \"./firebase\";\nimport 'firebase/auth';\n\nconst store = createStore(\n  rootReducer, \n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nstore.subscribe(() =>\n  console.log(\"Subscribe\", store.getState())\n);\n\nconst rrfProps = {\n  firebase,\n  config: {\n        userProfile: \"users\",\n        useFirestoreForProfile: true,\n    },\n  dispatch: store.dispatch,\n  createFirestoreInstance\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <App />\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}